<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>pi-display</artifactId>
        <groupId>com.ibasco.pidisplay</groupId>
        <version>0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>pi-display-native</artifactId>
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>
    <name>pi-display :: Native Library</name>

    <properties>
        <lib-output-filename>libpidisp.so</lib-output-filename>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>uk.org.lidalia</groupId>
            <artifactId>sysout-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>native-lib-loader</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
        </dependency>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
        </dependency>
    </dependencies>

    <!-- Build Profiles -->
    <profiles>
        <!-- Activate if running on Raspberry Pi -->
        <profile>
            <id>local-compile</id>
            <activation>
                <os>
                    <name>linux</name>
                    <family>unix</family>
                    <arch>arm</arch>
                </os>
            </activation>
            <properties>
                <cross-compile-enabled>false</cross-compile-enabled>
            </properties>
        </profile>

        <!-- Activate if running on x86* (For cross-compiling) -->
        <profile>
            <id>cross-compile</id>
            <activation>
                <os>
                    <name>linux</name>
                    <family>unix</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <cross-compile-enabled>true</cross-compile-enabled>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Native Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>javah</goal>
                        </goals>
                        <configuration>
                            <javahVerbose>true</javahVerbose>
                            <javahPath>${env.JAVA_HOME}/bin/javah</javahPath>
                            <javahIncludes>
                                <javahInclude>
                                    <className>com.ibasco.pidisplay.core.system.InputDeviceManager</className>
                                    <headerName>InputDeviceManager.h</headerName>
                                </javahInclude>
                                <javahInclude>
                                    <className>com.ibasco.pidisplay.core.ui.U8g2Interface</className>
                                    <headerName>U8g2Interface.h</headerName>
                                </javahInclude>
                            </javahIncludes>
                            <javahOutputDirectory>${project.basedir}/src/main/cpp</javahOutputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Ant-Run Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Prepare directories -->
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="target"/>
                                <mkdir dir="target/classes"/>
                                <mkdir dir="target/natives"/>
                                <mkdir dir="target/natives/linux_32/arm"/>
                                <mkdir dir="target/natives/linux_32/x86"/>
                                <!--<mkdir dir="target/natives/bin/arm"/>
                                <mkdir dir="target/natives/bin/x86"/>-->
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <!-- Compile native library using CMake -->
                    <execution>
                        <id>make</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="build-pidisp">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath"/>
                                <exec executable="cmake" dir="${project.basedir}/src/main/cpp" failonerror="true">
                                    <arg line="--target all"/>
                                    <arg line="-DCMAKE_BUILD_TYPE=Release"/>
                                    <arg line="-G 'CodeBlocks - Unix Makefiles'"/>
                                    <arg line="-H."/>
                                    <arg line="-Bbuild/x86"/>
                                </exec>
                                <if>
                                    <equals arg1="${cross-compile-enabled}" arg2="true"/>
                                    <then>
                                        <echo>[CROSS_COMPILE=ON] Invoking CMAKE Cross-compile build instructions</echo>
                                        <!-- Cross-Compile -->
                                        <exec executable="cmake" dir="${project.basedir}/src/main/cpp"
                                              failonerror="true">
                                            <arg line="--target all"/>
                                            <arg line="-DCMAKE_TOOLCHAIN_FILE=./cmake/RpiToolchain.cmake"/>
                                            <arg line="-DCMAKE_BUILD_TYPE=Release"/>
                                            <arg line="-G 'CodeBlocks - Unix Makefiles'"/>
                                            <arg line="-H."/>
                                            <arg line="-Bbuild/arm"/>
                                        </exec>
                                        <exec executable="make" dir="${project.basedir}/src/main/cpp/build/x86"
                                              failonerror="true">
                                            <arg line="VERBOSE=1"/>
                                        </exec>
                                        <exec executable="make" dir="${project.basedir}/src/main/cpp/build/arm"
                                              failonerror="true">
                                            <arg line="VERBOSE=1"/>
                                        </exec>
                                    </then>
                                    <else>
                                        <echo>[CROSS_COMPILE=OFF] Performing standard build</echo>
                                        <exec executable="cmake" dir="${project.basedir}/src/main/cpp"
                                              failonerror="true">
                                            <arg line="--target all"/>
                                            <arg line="-DCMAKE_BUILD_TYPE=Release"/>
                                            <arg line="-G 'CodeBlocks - Unix Makefiles'"/>
                                            <arg line="-H."/>
                                            <arg line="-Bbuild/arm"/>
                                        </exec>
                                        <!-- Only build the ARM binaries -->
                                        <exec executable="make" dir="${project.basedir}/src/main/cpp/build/arm"
                                              failonerror="true">
                                            <arg line="VERBOSE=1"/>
                                        </exec>
                                    </else>
                                </if>
                            </target>
                        </configuration>
                    </execution>
                    <!-- Attach native library artifacts -->
                    <!--<execution>
                        <id>pidisp-attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="pidisp-attach-libs">
                                <attachartifact file="${project.basedir}/src/main/cpp/build/arm/bin/${lib-output-filename}" classifier="raspberrypi" type="so"/>
                            </target>
                        </configuration>
                    </execution>-->
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>${anty.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>${ant-contrib.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Clean native build output -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/cpp/build</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- Copy native libraries to project's target directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- Copy ARM binaries -->
                    <execution>
                        <id>copy-lib-arm</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/natives/linux_32/arm</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/cpp/build/arm/bin</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>${lib-output-filename}</include>
                                    </includes>
                                </resource>
                            </resources>
                            <fileNameFiltering>
                                true
                            </fileNameFiltering>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                    <!-- Copy x86 binaries -->
                    <execution>
                        <id>copy-lib-x86</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/natives/linux_32/x86</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/cpp/build/x86/bin</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>${lib-output-filename}</include>
                                    </includes>
                                </resource>
                            </resources>
                            <fileNameFiltering>
                                true
                            </fileNameFiltering>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- JAR Plugin: Include the classes and natives folder in jar packaging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classesDirectory>${project.build.directory}</classesDirectory>
                    <includes>
                        <include>**/classes/**</include>
                        <include>**/natives/**</include>
                    </includes>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>

            </plugin>
        </plugins>
    </build>
</project>