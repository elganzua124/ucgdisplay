if (WIN32)
    message(STATUS "[MAIN] You are running on WINDOWS with processor = ${CMAKE_SYSTEM_PROCESSOR}")
elseif (APPLE)
    message(STATUS "[MAIN] You are running on MAC OS with processor = ${CMAKE_SYSTEM_PROCESSOR}")
elseif (UNIX)
    message(STATUS "[MAIN] You are running on unix/linux with processor = ${CMAKE_SYSTEM_PROCESSOR}")
elseif (MSVC)
    message(STATUS "[MAIN] You are running on MSVC with processor = ${CMAKE_SYSTEM_PROCESSOR}")
endif ()

option(USE_DEV "Use UDev for Device Status monitoring instead of INotify" OFF)

set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/../../../../../cmake")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single Directory for all Libraries")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single Directory for all Executables")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single Directory for all static libraries")
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(TOOLS_DIR_PATH ${CMAKE_CURRENT_SOURCE_DIR}/tools)
set(JDK_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../../../include)

message(STATUS "[MAIN] TOOLS DIR = ${TOOLS_DIR_PATH}")
message(STATUS "[MAIN] CURRENT LIST DIR = ${CMAKE_CURRENT_LIST_DIR}")
message(STATUS "[MAIN] CROSS COMPILE  = ${CMAKE_CROSSCOMPILING}")
message(STATUS "[MAIN] HOST OS        = ${CMAKE_HOST_SYSTEM_NAME}")
message(STATUS "[MAIN] TARGET OS      = ${CMAKE_SYSTEM_NAME}")
message(STATUS "[MAIN] TARGET ARCH    = ${CMAKE_SYSTEM_PROCESSOR}")
message(STATUS "[MAIN] JDK INC DIR    = ${JDK_INCLUDE_DIR}")

# Adhere to GNU filesystem layout conventions
include(GNUInstallDirs)

set(LIB_DIR "${CMAKE_SOURCE_DIR}/lib")

# Find JAVA_HOME/INCLUDE DIR
if (CMAKE_CROSSCOMPILING)
    if (WIN32)
        set(JDK_SEARCH_PATH "${JDK_INCLUDE_DIR}/jdk/windows/${CMAKE_SYSTEM_PROCESSOR}")
    elseif (UNIX)
        set(JDK_SEARCH_PATH "${JDK_INCLUDE_DIR}/jdk/linux/${CMAKE_SYSTEM_PROCESSOR}")
    else ()
        message(FATAL_ERROR "[FIND-JNI] Target OS/ARCH not supported = ${CMAKE_SYSTEM_PROCESSOR}")
    endif ()

    if (NOT EXISTS ${JDK_SEARCH_PATH})
        message(FATAL_ERROR "JDK search path undefined = ${JDK_SEARCH_PATH}")
    endif ()

    # Find JDK
    file(GLOB files "${JDK_SEARCH_PATH}/jdk*")
    foreach (file ${files})
        set(JAVA_HOME ${file})
        break()
    endforeach ()
endif ()

message(STATUS "[MAIN] JAVA_HOME: '${JAVA_HOME}'")

find_package(JNILib REQUIRED)

list(APPEND INC_DIRS ${JNI_INCLUDE_DIRS})
list(APPEND LINK_LIBS "")

if (WIN32)
    set(CMAKE_SHARED_LIBRARY_PREFIX "")
endif ()